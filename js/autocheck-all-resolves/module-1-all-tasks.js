// Test

function runTest(testName, tests) {
  const testTitle = `Unit test "${testName}"`;
  const testStartMessage = 'üîé Tests start...';
  const testErrorMessage = 'ü§¶‚Äç‚ôÇÔ∏è Error... Tests aren`t found!';
  const testFailedMessage = 'üö´ Unit test are failed!';
  const testPassedMessage = 'üòé All tests are passed!';
  const testFinishMessage = 'üèÅ Tests finish. ';
  let testResultMessage;

  function subTestRunner() {
    const subTestLogger = message => console.log(message);
    const subTestResultMessage = (subTestNumber, subTestResult) =>
      subTestResult
        ? `‚úî Test #${subTestNumber}: passed`
        : `‚ùå Test #${subTestNumber}: failed`;

    if (Array.isArray(tests)) {
      console.log(testStartMessage);
      testResultMessage = testPassedMessage;

      tests
        .map((subTestResult, index) => {
          if (!subTestResult) testResultMessage = testFailedMessage;
          return subTestResultMessage(++index, subTestResult);
        })
        .forEach(subTestLogger);

      console.log(testFinishMessage);
    } else {
      testResultMessage = testErrorMessage;
    }
  }

  console.group(testTitle);
  subTestRunner();
  console.log(testResultMessage);
  console.groupEnd();
}

const test = (expected, result) => {
  const testResult = expected === result;
  return testResult;
};

// Task 21 ======================================================

/*
–õ–æ–≥–∏—á–µ—Å–∫–æ–µ ¬´–ò¬ª (–æ–ø–µ—Ä–∞—Ç–æ—Ä &&)
–õ–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏–π —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤ –≤–µ—Ç–≤–ª–µ–Ω–∏—è—Ö.

–û–ø–µ—Ä–∞—Ç–æ—Ä && –ø—Ä–∏–≤–æ–¥–∏—Ç –≤—Å–µ –æ–ø–µ—Ä–∞–Ω–¥—ã –∫ –±—É–ª—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö. –õ–µ–≤—ã–π –æ–ø–µ—Ä–∞–Ω–¥, –µ—Å–ª–∏ –µ–≥–æ –º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ false, –∏ –ø—Ä–∞–≤—ã–π –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö.

–≤—ã—Ä–∞–∂–µ–Ω–∏–µ && –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
–í —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∏–º–µ—Ä–µ –æ–±–∞ —É—Å–ª–æ–≤–∏—è –≤–µ—Ä–Ω—É—Ç true, –ø–æ—ç—Ç–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—Å–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –±—É–¥–µ—Ç true - –≤–µ—Ä–Ω—ë—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–æ–≥–æ –æ–ø–µ—Ä–∞–Ω–¥–∞.

const age = 20;
console.log(age > 10 && age < 30); // true && true -> true
–ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –æ–ø–µ—Ä–∞–Ω–¥–æ–≤ –±—É–¥–µ—Ç –ø—Ä–∏–≤–µ–¥—ë–Ω –∫ false, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è –±—É–¥–µ—Ç —ç—Ç–æ—Ç –æ–ø–µ—Ä–∞–Ω–¥.

const age = 50;
console.log(age > 10 && age < 30); // true && false -> false
console.log(age > 80 && age < 120); // false && true -> false
–¢–æ –µ—Å—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–æ–µ ¬´–ò¬ª –∑–∞–ø–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ –ª–∂–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ, –Ω–∞ —á—ë–º –∑–∞–ø–Ω—É–ª–æ—Å—å –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–ø–µ—Ä–∞–Ω–¥.

console.log(true && false); // false
console.log(false && true); // false
console.log(true && true); // true

console.log(3 && false); // false
console.log(false && 3); // false
console.log(3 && true); // true
console.log(true && 3); // 3
–ü–æ–ª–µ–∑–Ω–æ
–ó–∞–ø–æ–º–Ω–∏—Ç–µ —à–µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤ –±—É–ª–µ–≤–æ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ `false`: `0`, `NaN`, `null`, `undefined`, –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ `""` –∏–ª–∏ `''` –∏ —Å–∞–º–æ –∑–Ω–∞—á–µ–Ω–∏–µ `false`. –ê–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–æ–¥–∏—Ç—Å—è –∫ `true`.

console.log(1 && 5); // true && true -> 5
console.log(5 && 1); // true && true -> 1
console.log(0 && 2); // false && true -> 0
console.log(2 && 0); // true && false -> 0
console.log("" && "–ú–∞–Ω–≥–æ"); // false && true -> ''
console.log("–ú–∞–Ω–≥–æ" && ""); // true && false -> ''
console.log("–ú–∞–Ω–≥–æ" && "–ü–æ–ª–∏"); // true && true -> '–ü–æ–ª–∏'
console.log("–ü–æ–ª–∏" && "–ú–∞–Ω–≥–æ"); // true && true -> '–ú–∞–Ω–≥–æ'
–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è isNumberInRange(start, end, number) –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—Ö–æ–¥–∏—Ç –ª–∏ —á–∏—Å–ª–æ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫. –û–Ω–∞ –æ–±—ä—è–≤–ª—è–µ—Ç —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –∑–∞–¥–∞–≤–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –µ—ë –≤—ã–∑–æ–≤–∞:

number - —á–∏—Å–ª–æ, –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è
start - –Ω–∞—á–∞–ª–æ —á–∏—Å–ª–æ–≤–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞
end - –∫–æ–Ω–µ—Ü —á–∏—Å–ª–æ–≤–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞
–ü—Ä–∏—Å–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π isInRange –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏—è number –≤ —á–∏—Å–ª–æ–≤–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –æ—Ç start –¥–æ end. –¢–æ –µ—Å—Ç—å —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ start –∏ –º–µ–Ω—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ end. –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—É–¥–µ—Ç –±—É–ª—å true –∏–ª–∏ false.

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è isNumberInRange(start, end, number)
–í –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä &&
–í—ã–∑–æ–≤ isNumberInRange(10, 30, 17) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true
–í—ã–∑–æ–≤ isNumberInRange(10, 30, 5) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false 
–í—ã–∑–æ–≤ isNumberInRange(20, 50, 24) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true
–í—ã–∑–æ–≤ isNumberInRange(20, 50, 76) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false
*/

// Solution

function isNumberInRange(start, end, number) {
  const isInRange = number >= start && number <= end;
  return isInRange;
}

// Testing

const task21Tests = [
  test(isNumberInRange(10, 30, 17), true),
  test(isNumberInRange(10, 30, 5), false),
  test(isNumberInRange(20, 50, 24), true),
  test(isNumberInRange(20, 50, 76), false),
];

runTest('Task 21', task21Tests);

// Task 22 ======================================================

/* –õ–æ–≥–∏—á–µ—Å–∫–æ–µ ¬´–ò–õ–ò¬ª (–æ–ø–µ—Ä–∞—Ç–æ—Ä ||)
–û–ø–µ—Ä–∞—Ç–æ—Ä || –ø—Ä–∏–≤–æ–¥–∏—Ç –≤—Å–µ –æ–ø–µ—Ä–∞–Ω–¥—ã –∫ –±—É–ª—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö. –õ–µ–≤—ã–π –æ–ø–µ—Ä–∞–Ω–¥, –µ—Å–ª–∏ –µ–≥–æ –º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ true, –∏ –ø—Ä–∞–≤—ã–π –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö.

–≤—ã—Ä–∞–∂–µ–Ω–∏–µ || –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
–í —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–∏–º–µ—Ä–µ —É—Å–ª–æ–≤–∏–µ —Å–ª–µ–≤–∞ –≤–µ—Ä–Ω—ë—Ç true, –ø–æ—ç—Ç–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—Å–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –±—É–¥–µ—Ç true - –≤–µ—Ä–Ω—ë—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –æ–ø–µ—Ä–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ true.

const age = 5;
console.log(age < 10 || age > 30); // true || false -> true
–¢—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ç–æ–∂–µ –±—É–¥–µ—Ç true, —Ç–∞–∫ –∫–∞–∫ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –æ–ø–µ—Ä–∞–Ω–¥–æ–≤, –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø—Ä–∞–≤—ã–π, –±—ã–ª –ø—Ä–∏–≤–µ–¥—ë–Ω –∫ true.

const age = 40;
console.log(age < 10 || age > 30); // false || true -> true
–ê –∑–¥–µ—Å—å –Ω–∏ –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É –ø–æ–ª—É—á–∞–µ–º false - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–ø–µ—Ä–∞–Ω–¥–∞.

const age = 20;
console.log(age < 10 || age > 30); // false || false -> false
–¢–æ –µ—Å—Ç—å –ª–æ–≥–∏—á–µ—Å–∫–æ–µ ¬´–ò–õ–ò¬ª –∑–∞–ø–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ –ø—Ä–∞–≤–¥–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ, –Ω–∞ —á—ë–º –∑–∞–ø–Ω—É–ª–æ—Å—å –∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–ø–µ—Ä–∞–Ω–¥.

console.log(true || false); // true
console.log(false || true); // true
console.log(true || true); // true

console.log(3 || false); // 3
console.log(false || 3); // 3
console.log(3 || true); // 3
console.log(true || 3); // true
–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è checkIfCanAccessContent(subType) –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —Ç–∏–ø—É –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π pro –∏–ª–∏ vip.

–ü—Ä–∏—Å–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π canAccessContent –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏. –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ subType —Ä–∞–≤–Ω–æ —Å—Ç—Ä–æ–∫–∞–º "pro" –∏–ª–∏ "vip", –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –¥–æ—Å—Ç—É–ø. –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—É–¥–µ—Ç –±—É–ª—å true –∏–ª–∏ false.

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è checkIfCanAccessContent(subType)
–í –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä ||
–í—ã–∑–æ–≤ checkIfCanAccessContent("pro") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true
–í—ã–∑–æ–≤ checkIfCanAccessContent("starter") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false
–í—ã–∑–æ–≤ checkIfCanAccessContent("vip") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true
–í—ã–∑–æ–≤ checkIfCanAccessContent("free") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false */

// Solution

function checkIfCanAccessContent(subType) {
  const canAccessContent = subType === 'pro' || subType === 'vip';
  return canAccessContent;
}

// Testing

const task22Tests = [
  test(checkIfCanAccessContent('pro'), true),
  test(checkIfCanAccessContent('starter'), false),
  test(checkIfCanAccessContent('vip'), true),
  test(checkIfCanAccessContent('free'), false),
];

runTest('Task 22', task22Tests);

// Task 23 ======================================================

/* –õ–æ–≥–∏—á–µ—Å–∫–æ–µ ¬´–ù–ï¬ª (–æ–ø–µ—Ä–∞—Ç–æ—Ä !)
–í—Å–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏ –¥–æ —ç—Ç–æ–≥–æ, –±—ã–ª–∏ –±–∏–Ω–∞—Ä–Ω—ã–º–∏. –¢.–µ. –æ–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞–ª–∏ –¥–≤–∞ –æ–ø–µ—Ä–∞–Ω–¥–∞: –ª–µ–≤—ã–π –∏ –ø—Ä–∞–≤—ã–π. –õ–æ–≥–∏—á–µ—Å–∫–æ–µ ¬´–ù–ï¬ª - —ç—Ç–æ —É–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä, –≤—ã–ø–æ–ª–Ω—è—é—â–∏–π –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞–¥ –æ–¥–Ω–∏–º –æ–ø–µ—Ä–∞–Ω–¥–æ–º —Å–ø—Ä–∞–≤–∞.

!–≤—ã—Ä–∞–∂–µ–Ω–∏–µ
–û–ø–µ—Ä–∞—Ç–æ—Ä ! –ø—Ä–∏–≤–æ–¥–∏—Ç –æ–ø–µ—Ä–∞–Ω–¥ –∫ –±—É–ª—é, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, –∞ –∑–∞—Ç–µ–º –¥–µ–ª–∞–µ—Ç –∏–Ω–≤–µ—Ä—Å–∏—é - –∑–∞–º–µ–Ω—è–µ—Ç –µ–≥–æ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–π true -> false –∏–ª–∏ false -> true.

console.log(!true); // false
console.log(!false); // true
console.log(!3); // !3 -> !true -> false
console.log(!"–ú–∞–Ω–≥–æ"); // !'–ú–∞–Ω–≥–æ' -> !true -> false
console.log(!0); // !0 -> !false -> true
console.log(!""); // !'' -> !false -> true

const isOnline = true;
const isNotOnline = !isOnline; // !isOnline -> !true -> false
–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è getDiscount(start, end, number) –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –≤—Ö–æ–¥–∏—Ç –ª–∏ —á–∏—Å–ª–æ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫. –¢–æ –µ—Å—Ç—å —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ start –∏ –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ end. –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—É–¥–µ—Ç –±—É–ª—å true –∏–ª–∏ false.

–û–Ω–∞ –æ–±—ä—è–≤–ª—è–µ—Ç —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –∑–∞–¥–∞–≤–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –µ—ë –≤—ã–∑–æ–≤–∞:

number - —á–∏—Å–ª–æ, –Ω–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è
start - –Ω–∞—á–∞–ª–æ —á–∏—Å–ª–æ–≤–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞
end - –∫–æ–Ω–µ—Ü —á–∏—Å–ª–æ–≤–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞
–ü—Ä–∏—Å–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π isNotInRange –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω–≤–µ—Ä—Å–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π isInRange –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä !.

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è isNumberNotInRange(start, end, number)
–í –≤—ã—Ä–∞–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä !
–í—ã–∑–æ–≤ isNumberNotInRange(10, 30, 17) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false
–í—ã–∑–æ–≤ isNumberNotInRange(10, 30, 5) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true
–í—ã–∑–æ–≤ isNumberNotInRange(20, 50, 24) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false
–í—ã–∑–æ–≤ isNumberNotInRange(20, 50, 76) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true */

// Solution

function isNumberNotInRange(start, end, number) {
  const isInRange = number >= start && number <= end;
  const isNotInRange = !isInRange;
  return isNotInRange;
}

// Testing

const task23Tests = [
  test(isNumberNotInRange(10, 30, 17), false),
  test(isNumberNotInRange(10, 30, 5), true),
  test(isNumberNotInRange(20, 50, 24), false),
  test(isNumberNotInRange(20, 50, 76), true),
];

runTest('Task 23', task23Tests);

// Task 24 ======================================================

/* –ó–∞–¥–∞—á–∞: —Ä–∞—Å—á—ë—Ç —Å–∫–∏–¥–∫–∏
–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è getDiscount(totalSpent) –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥ (–ø–∞—Ä–∞–º–µ—Ç—Ä totalSpent) –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è (–ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞). –°–∫–∏–¥–∫–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é discount –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ—ë —Ä–∞–±–æ—Ç—ã.

–ò—Å–ø–æ–ª—å–∑—É—è –≤–µ—Ç–≤–ª–µ–Ω–∏—è –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã, –¥–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏.

–ï—Å–ª–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –æ—Ç 50000 ( –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ ) –∏–ª–∏ –±–æ–ª—å—à–µ –∫—Ä–µ–¥–∏—Ç–æ–≤ - —Å–∫–∏–¥–∫–∞ 10% (–∑–æ–ª–æ—Ç–æ–π –ø–∞—Ä—Ç–Ω—ë—Ä)
–ï—Å–ª–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –æ—Ç 20000 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) –¥–æ 50000 –∫—Ä–µ–¥–∏—Ç–æ–≤ - —Å–∫–∏–¥–∫–∞ 5% (—Å–µ—Ä–µ–±—Ä—è–Ω–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä)
–ï—Å–ª–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –æ—Ç 5000 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) –¥–æ 20000 –∫—Ä–µ–¥–∏—Ç–æ–≤ - —Å–∫–∏–¥–∫–∞ 2% (–±—Ä–æ–Ω–∑–æ–≤—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä)
–ï—Å–ª–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –º–µ–Ω—å—à–µ —á–µ–º 5000 –∫—Ä–µ–¥–∏—Ç–æ–≤ - —Å–∫–∏–¥–∫–∞ 0 (–±–∞–∑–æ–≤—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä)
–ó–Ω–∞—á–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫ –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞—Ö BASE_DISCOUNT, BRONZE_DISCOUNT, SILVER_DISCOUNT –∏ GOLD_DISCOUNT.

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è getDiscount(totalSpent)
–í—ã–∑–æ–≤ getDiscount(137000) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0.1
–í—ã–∑–æ–≤ getDiscount(46900) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0.05
–í—ã–∑–æ–≤ getDiscount(8250) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0.02
–í—ã–∑–æ–≤ getDiscount(1300) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0
–í—ã–∑–æ–≤ getDiscount(5000) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0.02
–í—ã–∑–æ–≤ getDiscount(20000) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0.05
–í—ã–∑–æ–≤ getDiscount(50000) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0.1 */

// Solution

// function getDiscount(totalSpent) {
//   const BASE_DISCOUNT = 0;
//   const BRONZE_DISCOUNT = 0.02;
//   const SILVER_DISCOUNT = 0.05;
//   const GOLD_DISCOUNT = 0.1;
//   let discount;

//   if (totalSpent >= 50000) {
//     discount = GOLD_DISCOUNT;
//   } else if (totalSpent >= 20000 && totalSpent < 50000) {
//     discount = SILVER_DISCOUNT;
//   } else if (totalSpent >= 5000 && totalSpent < 20000) {
//     discount = BRONZE_DISCOUNT;
//   } else if (totalSpent < 5000) {
//     discount = BASE_DISCOUNT;
//   }
//   return discount;
// }

// Solution2

function getDiscount(totalSpent) {
  const BASE_DISCOUNT = 0;
  const BRONZE_DISCOUNT = 0.02;
  const SILVER_DISCOUNT = 0.05;
  const GOLD_DISCOUNT = 0.1;

  if (totalSpent < 5000) {
    return BASE_DISCOUNT;
  } else if (totalSpent < 20000) {
    return BRONZE_DISCOUNT;
  } else if (totalSpent < 50000) {
    return SILVER_DISCOUNT;
  } else if (totalSpent >= 50000) {
    return GOLD_DISCOUNT;
  }
}

// Testing

const task24Tests = [
  test(getDiscount(137000), 0.1),
  test(getDiscount(46900), 0.05),
  test(getDiscount(8250), 0.02),
  test(getDiscount(1300), 0),
  test(getDiscount(5000), 0.02),
  test(getDiscount(20000), 0.05),
  test(getDiscount(50000), 0.1),
];

runTest('Task 24', task24Tests);

// Task 25 ======================================================

/* –¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
–¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –±–æ–ª–µ–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –∫—Ä–∞—Ç–∫–∞—è –∑–∞–º–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if...else, –∫–æ–≥–¥–∞ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏—Å–≤–æ–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É—Å–ª–æ–≤–∏—é.

<—É—Å–ª–æ–≤–∏–µ> ? <–≤—ã—Ä–∞–∂–µ–Ω–∏–µ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ> : <–≤—ã—Ä–∞–∂–µ–Ω–∏–µ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ>
–†–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Ç–∞–∫–æ–π —Å—Ö–µ–º–µ:

–í—ã—á–∏—Å–ª—è–µ—Ç—Å—è —É—Å–ª–æ–≤–∏–µ.
–ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ, —Ç–æ –µ—Å—Ç—å –ø—Ä–∏–≤–æ–¥–∏—Ç—Å—è –∫ true, –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ ?.
–ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ, —Ç–æ –µ—Å—Ç—å –ø—Ä–∏–≤–æ–¥–∏—Ç—Å—è –∫ false, –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ :.
–ó–Ω–∞—á–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ç–µ—Ä–Ω–∞—Ä–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.
let type;
const age = 20;

if (age >= 18) {
  type = "adult";
} else {
  type = "child";
}

console.log(type); // "adult"
–í—ã–ø–æ–ª–Ω–∏–º —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥, –∑–∞–º–µ–Ω–∏–≤ if...else —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.

const age = 20;
const type = age >= 18 ? "adult" : "child";
console.log(type); // "adult"
–í–Ω–∏–º–∞–Ω–∏–µ
–¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Å—Ç—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞. –ü—Ä–∏–º–µ–Ω—è—Ç—å –µ–≥–æ –¥–ª—è –∑–∞–º–µ–Ω—ã —Å–ª–æ–∂–Ω—ã—Ö –≤–µ—Ç–≤–ª–µ–Ω–∏–π ‚Äî –ø–ª–æ—Ö–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ (–∞–Ω—Ç–∏–ø–∞—Ç—Ç–µ—Ä–Ω).

–ó–∞–¥–∞–Ω–∏–µ
–í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ ¬´–°–∫–ª–∞–¥ —Ç–æ–≤–∞—Ä–æ–≤¬ª, –∑–∞–º–µ–Ω–∏–≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é if...else —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è checkStorage(available, ordered).
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä.
–í—ã–∑–æ–≤ checkStorage(100, 50) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "The order is accepted, our manager will contact you"
–í—ã–∑–æ–≤ checkStorage(100, 130) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Not enough goods in stock!"
–í—ã–∑–æ–≤ checkStorage(200, 20) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "The order is accepted, our manager will contact you"
–í—ã–∑–æ–≤ checkStorage(200, 150) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "The order is accepted, our manager will contact you"
–í—ã–∑–æ–≤ checkStorage(150, 180) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Not enough goods in stock!" */

// Task 25 Solution

function checkStorage(available, ordered) {
  return ordered > available
    ? 'Not enough goods in stock!'
    : 'The order is accepted, our manager will contact you';
}

// Task 25 Testing

const accepted = 'The order is accepted, our manager will contact you';
const rejected = 'Not enough goods in stock!';

const task25Tests = [
  test(checkStorage(100, 50), accepted),
  test(checkStorage(100, 130), rejected),
  test(checkStorage(200, 20), accepted),
  test(checkStorage(200, 150), accepted),
  test(checkStorage(150, 180), rejected),
];

runTest('Task 25', task25Tests);

// Task 26 ======================================================

/* –ó–∞–¥–∞—á–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è checkPassword(password) —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –µ–π –ø–∞—Ä–æ–ª—å (–ø–∞—Ä–∞–º–µ—Ç—Ä password) —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ ADMIN_PASSWORD) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.

–ò—Å–ø–æ–ª—å–∑—É—è —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é —Ç–∞–∫, —á—Ç–æ:

–ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è password –∏ ADMIN_PASSWORD —Å–æ–≤–ø–∞–¥–∞—é—Ç, –ø—Ä–∏—Å–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π message —Å—Ç—Ä–æ–∫—É "Access is allowed".
–í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –ø—Ä–∏—Å–≤–æ–π message —Å—Ç—Ä–æ–∫—É "Access denied, wrong password!".
–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è checkPassword(password)
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
–í—ã–∑–æ–≤ checkPassword("jqueryismyjam") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Access is allowed"
–í—ã–∑–æ–≤ checkPassword("angul4r1sl1f3") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Access denied, wrong password!"
–í—ã–∑–æ–≤ checkPassword("r3actsux") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Access denied, wrong password!" */

// Task 26 Solution

function checkPassword(password) {
  const ADMIN_PASSWORD = 'jqueryismyjam';

  return password !== ADMIN_PASSWORD
    ? 'Access denied, wrong password!'
    : 'Access is allowed';
}

// Task 26 Testing

const task26Tests = [
  test(checkPassword('jqueryismyjam'), 'Access is allowed'),
  test(checkPassword('angul4r1sl1f3'), 'Access denied, wrong password!'),
  test(checkPassword('r3actsux'), 'Access denied, wrong password!'),
];

runTest('Task 26', task26Tests);

// Task 27 ======================================================

/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è switch
–í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–ª—É—á–∞—è—Ö –Ω–µ—É–¥–æ–±—Å—Ç–≤–æ —á—Ç–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –≤–µ—Ç–≤–ª–µ–Ω–∏–π if...else –º–æ–∂–Ω–æ –∏–∑–±–µ–∂–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –±–æ–ª–µ–µ ¬´–ø–ª–æ—Å–∫–∏–π¬ª —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤–µ—Ç–≤–ª–µ–Ω–∏—è switch.

–û–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è switch –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –∑–∞–¥–∞—á–∞–º–∏ —Å –æ–¥–Ω–∏–º –æ–±—â–∏–º –≤–æ–ø—Ä–æ—Å–æ–º (—á—Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å) –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤ (—Å —á–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å).

switch (–∑–Ω–∞—á–µ–Ω–∏–µ) {
  case –∑–Ω–∞—á–µ–Ω–∏–µ:
    –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏;
    break;

  case –∑–Ω–∞—á–µ–Ω–∏–µ:
    –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏;
    break;
}
–ï–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –±–ª–æ–∫–∞ switch(–∑–Ω–∞—á–µ–Ω–∏–µ) - —á—Ç–æ –Ω—É–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ case –∑–Ω–∞—á–µ–Ω–∏–µ: - —Å —á–µ–º –Ω—É–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏—Ç—å. –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å—Ç—Ä–æ–≥–æ–≥–æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ ===. –¢–æ –µ—Å—Ç—å –Ω–µ–ª—å–∑—è —Å—Ä–∞–≤–Ω–∏—Ç—å –Ω–∞ –±–æ–ª—å—à–µ –∏–ª–∏ –º–µ–Ω—å—à–µ, —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ.

–ó–Ω–∞—á–µ–Ω–∏–µ –≤ –±–ª–æ–∫–µ switch(–∑–Ω–∞—á–µ–Ω–∏–µ) - —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–æ–≥–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ —Å–æ –≤—Å–µ–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ –±–ª–æ–∫–∞—Ö case –∑–Ω–∞—á–µ–Ω–∏–µ: –ø–æ –ø–æ—Ä—è–¥–∫—É, —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑.

–û–ø–µ—Ä–∞—Ç–æ—Ä break –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞ case –Ω–µ–æ–±—Ö–æ–¥–∏–º, —á—Ç–æ–±—ã –ø—Ä–µ—Ä–≤–∞—Ç—å –¥–∞–ª—å–Ω–µ–π—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–¥—É –∑–∞ switch –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –≤–µ—Ä–Ω—É–ª–∞ true.

–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è getSubscriptionPrice(type) –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ç–∏–ø–æ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–∞—Ä–∞–º–µ—Ç—Ä type), –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—ë –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —Ç—Ä–µ–º—è –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–µ–Ω—É —Ö—Ä–∞–Ω—è—â—É—é—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π price.

–ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ type —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞:

"starter" - —Ü–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ 0 –∫—Ä–µ–¥–∏—Ç–æ–≤.
"professional" - —Ü–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ 20 –∫—Ä–µ–¥–∏—Ç–æ–≤.
"organization" - —Ü–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ 50 –∫—Ä–µ–¥–∏—Ç–æ–≤.
–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±—ã–ª–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è if...else, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≥–ª—è–¥–µ–ª–∞ –≤–æ—Ç —Ç–∞–∫.

if (type === "starter") {
  price = 0;
} else if (type === "professional") {
  price = 20;
} else if (type === "organization") {
  price = 50;
}
–ü–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è if..else –±—ã–ª–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ switch. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ switch, —á—Ç–æ–±—ã —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è getSubscriptionPrice(type)
–í—ã–∑–æ–≤ getSubscriptionPrice("professional") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ 20
–í—ã–∑–æ–≤ getSubscriptionPrice("organization") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ 50
–í—ã–∑–æ–≤ getSubscriptionPrice("starter") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ 0 */

// Task 27 Solution

function getSubscriptionPrice(type) {
  switch (type) {
    case 'starter':
      return 0;
    case 'professional':
      return 20;
    case 'organization':
      return 50;
    default:
      return 'Invalid arguments';
  }
}

// Task 27 Testing

const task27Tests = [
  test(getSubscriptionPrice('professional'), 20),
  test(getSubscriptionPrice('organization'), 50),
  test(getSubscriptionPrice('starter'), 0),
];

runTest('Task 27', task27Tests);

// Task 28 ======================================================

/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è switch c –±–ª–æ–∫–æ–º default
–ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –∫–∞–∫ –≤ –±–ª–æ–∫–µ else –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if...else. –î–ª—è —ç—Ç–æ–≥–æ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ case –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –±–ª–æ–∫ default.

switch (–∑–Ω–∞—á–µ–Ω–∏–µ) {
  case –∑–Ω–∞—á–µ–Ω–∏–µ:
    –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏;
    break;

  case –∑–Ω–∞—á–µ–Ω–∏–µ:
    –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏;
    break;

  default:
    –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏;
}
–û–ø–µ—Ä–∞—Ç–æ—Ä break –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ default –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –∏ —Ç–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —á—Ç–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –≤ switch –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –∫–æ–¥—É –∑–∞ –Ω–∏–º.

–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è checkPassword(password) –ø–æ–ª—É—á–∞–µ—Ç –ø–∞—Ä–æ–ª—å –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä password, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ADMIN_PASSWORD –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, —Ö—Ä–∞–Ω—è—â–µ–µ—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π message.

–ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ password:

—Ä–∞–≤–Ω–æ null, –∑–Ω–∞—á–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –≤ message –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ "Canceled by user!".
—Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º ADMIN_PASSWORD, –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é message –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ "Welcome!".
–Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Å–ª–æ–≤–∏–π, –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é message –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ "Access denied, wrong password!".
–ü—Ä–æ–≤–µ–¥–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞, –∑–∞–º–µ–Ω–∏–≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é if..else –Ω–∞ switch, –∏ –Ω–µ –∑–∞–±—É–¥—å –æ –±–ª–æ–∫–µ default (–∞–Ω–∞–ª–æ–≥ else).

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è checkPassword(password)
–í—ã–∑–æ–≤ checkPassword("mangohackzor") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Access denied, wrong password!"
–í—ã–∑–æ–≤ checkPassword(null) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Canceled by user!"
–í—ã–∑–æ–≤ checkPassword("polyhax") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Access denied, wrong password!"
–í—ã–∑–æ–≤ checkPassword('"jqueryismyjam") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Welcome!" */

// Task 28 Solution

function checkPasswordV2(password) {
  const ADMIN_PASSWORD = 'jqueryismyjam';

  switch (password) {
    case null:
      return 'Canceled by user!';

    case ADMIN_PASSWORD:
      return 'Welcome!';

    default:
      return 'Access denied, wrong password!';
  }
}

// Task 28 Testing

const task28Tests = [
  test(checkPasswordV2('mangohackzor'), 'Access denied, wrong password!'),
  test(checkPasswordV2(null), 'Canceled by user!'),
  test(checkPasswordV2('polyhax'), 'Access denied, wrong password!'),
  test(checkPasswordV2('jqueryismyjam'), 'Welcome!'),
];

runTest('Task 28', task28Tests);

// Task 29 ======================================================

/* –ó–∞–¥–∞—á–∞: –¥–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–∞
–ó–∞–¥–∞–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è getShippingCost(country) –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ç–æ–≤–∞—Ä–∞ –≤ —Å—Ç—Ä–∞–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–∞—Ä–∞–º–µ—Ç—Ä country) –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ö—Ä–∞–Ω—è—â–µ–µ—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π message. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é switch.

–§–æ—Ä–º–∞—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–π —Å—Ç—Ä–æ–∫–∏ "Shipping to <country> will cost <price> credits", –≥–¥–µ –≤–º–µ—Å—Ç–æ <country> –∏ <price> –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è.

–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:

China - 100 –∫—Ä–µ–¥–∏—Ç–æ–≤
Chile - 250 –∫—Ä–µ–¥–∏—Ç–æ–≤
Australia - 170 –∫—Ä–µ–¥–∏—Ç–æ–≤
Jamaica - 120 –∫—Ä–µ–¥–∏—Ç–æ–≤
–ò–∑ —Å–ø–∏—Å–∫–∞ –≤–∏–¥–Ω–æ, —á—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∞ –µ—Å—Ç—å –Ω–µ –≤–µ–∑–¥–µ. –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É "Sorry, there is no delivery to your country"

–¢–µ—Å—Ç—ã
–û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è getShippingCost(country)
–í —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è switch
–í—ã–∑–æ–≤ getShippingCost("Australia") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Shipping to Australia will cost 170 credits"
–í—ã–∑–æ–≤ getShippingCost("Germany") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Sorry, there is no delivery to your country"
–í—ã–∑–æ–≤ getShippingCost("China") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Shipping to China will cost 100 credits"
–í—ã–∑–æ–≤ getShippingCost("Chile") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Shipping to Chile will cost 250 credits"
–í—ã–∑–æ–≤ getShippingCost("Jamaica") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Shipping to Jamaica will cost 120 credits"
–í—ã–∑–æ–≤ getShippingCost("Sweden") –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "Sorry, there is no delivery to your country" */

// Task 29 Solution

function getShippingCost(country) {
  let price;

  switch (country) {
    case 'China':
      price = 100;
      break;
    case 'Jamaica':
      price = 120;
      break;
    case 'Australia':
      price = 170;
      break;
    case 'Chile':
      price = 250;
      break;

    default:
      return 'Sorry, there is no delivery to your country';
  }

  return `Shipping to ${country} will cost ${price} credits`;
}

// Task 29 Testing

const task29Tests = [
  test(
    getShippingCost('Australia'),
    'Shipping to Australia will cost 170 credits',
  ),
  test(
    getShippingCost('Germany'),
    'Sorry, there is no delivery to your country',
  ),
  test(getShippingCost('China'), 'Shipping to China will cost 100 credits'),
  test(getShippingCost('Chile'), 'Shipping to Chile will cost 250 credits'),
  test(getShippingCost('Jamaica'), 'Shipping to Jamaica will cost 120 credits'),
  test(
    getShippingCost('Sweden'),
    'Sorry, there is no delivery to your country',
  ),
];

runTest('Task 29', task29Tests);
